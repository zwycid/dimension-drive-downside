package mju.t3rd.sailingtext.ssidang.game;

import java.util.ArrayList;
import java.util.List;
import java.util.StringTokenizer;



public class Stage {
	public float width;		// stage 너비
	public float height;	// stage 높이
	
	public Portal start;	// 출발점
	public Portal goal;		// 도착점
	public List<Obstacle> obstacles = new ArrayList<Obstacle>();
	public List<Attractor> attractors = new ArrayList<Attractor>();
	public List<Sentry> sentries = new ArrayList<Sentry>();
	public List<Coin> coins = new ArrayList<Coin>();
	
	/**
	 * 직접 만들 수 없습니다.
	 */
	private Stage() {}
	
	/**
	 * 유틸리티 메서드
	 */
	private static float nextFloat(StringTokenizer tok) {
		return Float.parseFloat(tok.nextToken());
	}
	
	/**
	 * 맵 데이터 문자열로부터 Stage를 만듭니다.
	 * 
	 * @param data
	 * @return
	 */
	public static Stage fromData(String data) {
		// 샘플:
		// [mapsize],800,800/[s],100,400/[f],750,750/[b],400,300,700,500/
		StringTokenizer tok = new StringTokenizer(data, "/,");
		Stage stage = new Stage();
		
		while (tok.hasMoreTokens()) {
			String item = tok.nextToken();
			if (item.length() == 0) {
				// 끝
				break;
			}
			else if (item.startsWith("[") && item.endsWith("]")) {
				// [] 블록
				if (item.equals("[mapsize]")) {
					// 맵 크기
					stage.width = nextFloat(tok);
					stage.height = nextFloat(tok);
				}
				else if (item.equals("[s]")) {
					// 시작점
					stage.start = new Portal(nextFloat(tok), nextFloat(tok), 10);
				}
				else if (item.equals("[f]")) {
					// 골
					stage.goal = new Portal(nextFloat(tok), nextFloat(tok), 40);
				}
				else if (item.equals("[a]")) {
					// 끌개; attractor
					stage.attractors.add(new Attractor(nextFloat(tok), nextFloat(tok), 150, 3000));
				}
				else if (item.equals("[c]")) {
					// sentry
					stage.sentries.add(new Sentry(nextFloat(tok), nextFloat(tok), 200));
				}
				else if (item.equals("[b]")) {
					// 장애물
					stage.obstacles.add(new Obstacle(nextFloat(tok),
							nextFloat(tok), nextFloat(tok), nextFloat(tok)));
				}
				else if (item.equals("[i]")) {
					// 동전
					stage.coins.add(new Coin(nextFloat(tok), nextFloat(tok)));
				}
			}
		}
		
		return stage;
	}
	
	public static final String STAGE_0 =
			"[mapsize],720,1200/[s],334,7/[f],331,1184/[b],158," +
			"988,144,697/[b],358,416,497,602/[b],91,264,164,433" +
			"/[b],564,153,589,322/[b],322,181,249,262/[b],491,9" +
			"36,533,977/[b],345,679,461,711/[b],315,968,326,101" +
			"0/[b],617,1097,662,1129/[a],414,813/[a],94,565/[a]" +
			",428,321/[a],634,559/[a],168,140/[c],475,1077.5/[c" +
			"],230,1090/[c],264,916/[c],596,870/[c],38,766/[c]," +
			"526,63/[i],354,80/[i],352,106/[i],354,155.5/[i],35" +
			"4,209.5/[i],359,283/[i],349.5,334/[i],343,357/[i]," +
			"357,252/[i],305,349.5/[i],277.5,347/[i],249,350/[i" +
			"],228.5,355/[i],216,358/[i],201,375.5/[i],205.5,42" +
			"9.5/[i],208,481/[i],218,523/[i],223,550/[i],217,57" +
			"5/[i],218,610/[i],225.5,665/[i],230.5,713/[i],233." +
			"5,751.5/[i],240,805/[i],262.5,650.5/[i],373,643.5/" +
			"[i],509.5,644.5/[i],576,648/[i],638.5,657.5/[i],43" +
			"6,641/[i],466,634/[i],402,639/[i],312,643/[i],339." +
			"5,643.5/[i],538,647/[i],607,652/[i],665,661/[i],67" +
			"6,700/[i],674.5,745.5/[i],681.5,811.5/[i],683,864/" +
			"[i],680,929/[i],675,780/[i],681,839/[i],677,893/[i" +
			"],680,956/[i],684,1009.5/[i],689,1040/[i],680,982/" +
			"[i],696,1073/[i],700,1098.5/[i],695.5,1131/[i],687" +
			".5,1156/[i],673,1179.5/[i],613,1186/[i],513.5,1172" +
			".5/[i],444,1166/[i],352,1145/[i],396,1140/[i],471," +
			"1164/[i],568.5,1178/[i],192.5,666.5/[i],151.5,662/" +
			"[i],101.5,672/[i],82,682.5/[i],83,778/[i],86.5,836" +
			"/[i],88.5,862/[i],83,804/[i],82,724/[i],78,747/[i]" +
			",91,900/[i],89.5,927/[i],87.5,975.5/[i],90,1001/[i" +
			"],93,1028.5/[i],93.5,1053.5/[i],90,1091.5/[i],92.5" +
			",1119/[i],96,1138/[i],124.5,1163/[i],152,1165/[i]," +
			"202.5,1163.5/[i],261.5,1170/[i],275,1173/[i],291,1" +
			"161/";
	public static final String STAGE_1 =
			"[mapsize],780,1300/[s],20,819/[f],762,211/[b],212," +
			"1203,250,1168/[b],354,1070,407,1010/[b],446,937,45" +
			"7,899/[b],138,713,202,677/[b],358,582,421,546/[b]," +
			"509,496,580,449/[b],216,179,275,235/[b],299,257,33" +
			"5,321/[b],361,352,407,414/[b],483,189,539,221/[b]," +
			"646,351,647,355/[b],574,886,593,921/[b],634,1041,6" +
			"47,1091/[b],683,1202,693,1241/[b],293,814,271,840/" +
			"[b],223,888,180,923/[b],153,939,55,1004/[b],417,69" +
			"4,525,687/[b],632,701,660,721/[b],744,770,742,785/" +
			"[b],134,368,153,429/[b],162,61,269,66/[b],447,90,4" +
			"52,89/[a],448,1224.5/[a],219.5,918.5/[a],464,1068/" +
			"[a],455,806.5/[a],202,752/[a],314,645/[a],145,255." +
			"5/[a],414,247/[a],615,347/[a],689,1089/[a],570,116" +
			"2/[c],637,973/[c],499,1027/[c],87,1174/[c],632,576" +
			"/[c],234,535/[c],66.5,539/[c],83,67/[c],559.5,37.5" +
			"/[c],699.5,73.5/[c],680,199/[i],110.5,829/[i],233." +
			"5,827/[i],319,767.5/[i],393,704.5/[i],465,635/[i]," +
			"533.5,653.5/[i],589,797.5/[i],565.5,839.5/[i],577," +
			"735/[i],684,653/[i],493,505/[i],628,491/[i],319,47" +
			"2/[i],143,601.5/[i],160,453/[i],37,470/[i],62.5,60" +
			"5.5/[i],63,720/[i],239,428.5/[i],51.5,312/[i],58.5" +
			",187.5/[i],145.5,121.5/[i],286,112.5/[i],429,122.5" +
			"/[i],542.5,127.5/[i],591.5,133/[i],602.5,198.5/[i]" +
			",599.5,269/[i],670.5,303/[i],712,316/[i],509,309/[" +
			"i],589,286/[i],651.5,266/[i],634.5,154/[i],675,132" +
			"/[i],704,138/[i],706,252.5/[i],503,75/[i],412.5,51" +
			"/[i],347.5,71.5/[i],348,146.5/[i],419.5,152/[i],52" +
			"6.5,116/[i],607,84/[i],485,389.5/[i],628.5,416.5/[" +
			"i],695.5,439.5/[i],741,486/[i],705,948/[i],677,843" +
			"/[i],688.5,773/[i],721,677/[i],732,640/[i],680,520" +
			".5/[i],739,565.5/[i],722,385/[i],561,407/[i],482,4" +
			"25/[i],430.5,469/[i],430,519/[i],535.5,573.5/[i],5" +
			"96.5,635/[i],598,681.5/[i],118,1251/[i],322.5,1242" +
			"/[i],370,1190/[i],282,1092/[i],114,1083/[i],45,109" +
			"4/[i],71,1217/[i],84,1249/[i],227.5,1284.5/[i],172" +
			".5,1203.5/[i],142.5,1139/[i],181,1065/[i],234.5,10" +
			"25.5/[i],267.5,1062/[i],279,1119.5/[i],326.5,1148/" +
			"[i],384,1131/[i],444.5,1136/[i],520.5,1192.5/[i],5" +
			"68,1247/[i],599,1224.5/[i],621.5,1160.5/[i],705,11" +
			"56.5/[i],737,1191.5/[i],697.5,1272/[i],676,1290/[i" +
			"],590,1283/[i],494,1279.5/[i],425,1278/[i],362,127" +
			"8.5/[i],327.5,1279.5/[i],298,1277/[i],232,1248.5/[" +
			"i],185.5,1254/[i],174,1266/[i],56,1262/[i],34,1184" +
			".5/[i],55.5,1144/[i],116.5,1113.5/[i],234.5,1115.5" +
			"/[i],305,1184.5/[i],416.5,1160.5/[i],514,1113/[i]," +
			"566,1078/[i],587,1051/[i],553.5,989.5/[i],487.5,93" +
			"9.5/[i],438.5,963.5/[i],377.5,973/[i],316,940/[i]," +
			"309,901/[i],375.5,874.5/[i],453,875.5/[i],506.5,89" +
			"2.5/[i],635,914.5/[i],742,897/[i],765,974.5/[i],75" +
			"5.5,1051.5/[i],757.5,1107.5/[i],705,1046/[i],703,9" +
			"95.5/[i],613,1013/[i],578,1114/[i],488,1164/[i],45" +
			"1,1195/[i],516,1227.5/";
	public static final String STAGE_2 =
			"[mapsize],600,1200/[b],69,76,114,290/[b],184,80,22" +
			"9,283/[b],106,163,199,200/[b],101,245,219,283/[b]," +
			"299,78,329,282/[b],323,156,385,178/[b],378,83,415," +
			"283/[b],136,365,385,391/[b],354,376,378,521/[b],23" +
			"3,458,271,553/[b],136,541,410,571/[b],125,638,360," +
			"662/[b],188,655,214,747/[b],269,657,313,741/[b],14" +
			"0,730,353,757/[b],399,623,423,808/[b],418,695,498," +
			"721/[f],79,1116/[c],86,940/[c],129,958/[c],180,996" +
			"/[c],196,1026/[c],215,1068/[c],228,1100/[c],236,11" +
			"24/[c],241,1147/[a],74,458/[a],518,245/[a],510,521" +
			"/[a],519,816/[s],146,27/[i],256,77/[i],274,105/[i]" +
			",273,133/[i],269,167/[i],265,200/[i],266,252/[i],2" +
			"68,298/[i],101,331/[i],161,332/[i],215,323/[i],306" +
			",325/[i],360,323/[i],414,311/[i],453,308/[i],150,4" +
			"18/[i],215,418/[i],256,418/[i],315,417/[i],309,455" +
			"/[i],308,484/[i],168,481/[i],134,508/[i],84,535/[i" +
			"],80,590/[i],133,597/[i],188,595/[i],233.5,592/[i]" +
			",278,591/[i],313,590/[i],351,587/[i],391,590/[i],4" +
			"33,591/[i],444,535/[i],435,492/[i],435,441/[i],439" +
			",398/[i],445,370/[i],460,93/[i],460,127/[i],460,16" +
			"2/[i],465,201/[i],461,237/[i],456,271/[i],351,206/" +
			"[i],354,240/[i],355,288/[i],360,125.5/[i],356,90/[" +
			"i],354,48/[i],411,51/[i],443,54/[i],300,51/[i],146" +
			",78/[i],146,112/[i],146,137/[i],65,37/[i],39,53/[i" +
			"],33,90/[i],34,123/[i],35,153/[i],31,188.5/[i],35." +
			"5,230/[i],40,272/[i],43,307/[i],140,679/[i],105,68" +
			"3/[i],79,687/[i],85,746/[i],94,787/[i],156,788/[i]" +
			",198,789/[i],225,789/[i],264.5,794/[i],305,783/[i]" +
			",355,783/[i],355,693/[i],383,639/[i],386,668/[i],3" +
			"84,706/[i],376,751/[i],448,653/[i],504,668/[i],508" +
			",731/[i],475,741/[i],449,749/[i],451,799/";
}
