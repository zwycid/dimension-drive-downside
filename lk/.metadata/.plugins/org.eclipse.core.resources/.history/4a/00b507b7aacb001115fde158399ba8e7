package lk.summer.project;

import java.util.Random;

import android.content.Context;
import android.graphics.Paint;
import android.graphics.Point;
import android.util.AttributeSet;
import android.view.SurfaceHolder;
import android.view.SurfaceView;
import android.widget.TextView;

public class FallingTextSurfaceView extends SurfaceView implements SurfaceHolder.Callback, Runnable{

	private static final int THE_NUMBER_OF_FALLING_TEXT	= 10;
	private static final int FALLING_TEXT_MAX_SPEED	= 20;
	private static final int FALLING_TEXT_MIN_SPEED	= 5;

	private Thread thread;
	private GlowingTextView[] textViewArray;/*공 여러개를 운영하기 위해서 배열로 만듭니다.*/
	private int[] textWidthArray;
	private int[] textHeightArray;
	private Random random;

	public Thread getThread() {		return thread;	}
	public void setThread(Thread thread) {		this.thread = thread;	}
	public GlowingTextView[] getTextViewArray() {		return textViewArray;	}
	public void setTextViewArray(GlowingTextView[] textViews) {		this.textViewArray = textViews;	}
	public void setTextView(int index, GlowingTextView textView) {		this.textViewArray[index] = textView;	}
	public int[] getTextWidthArray() {		return textWidthArray;	}
	public void setTextWidthArray(int[] textWidth) {		this.textWidthArray = textWidth;	}
	public void setATextWidthOfArray(int index, int textWidth) {		this.textWidthArray[index] = textWidth;	}
	public int[] getTextHeightArray() {		return textHeightArray;	}
	public int getTextHeight(int index) {		return textHeightArray[index];	}
	public void setTextHeightArray(int[] textHeight) {		this.textHeightArray = textHeight;	}
	public void setTextHeight(int index, int textHeight) {		this.textHeightArray[index] = textHeight;	}

	public FallingTextSurfaceView(Context context, AttributeSet attrs, int defStyle) {
		super(context, attrs, defStyle);
	}

	public FallingTextSurfaceView(Context context, AttributeSet attrs) {
		super(context, attrs);
	}

	public FallingTextSurfaceView(Context context) {
		super(context);
	}

	private void initiateBackground(){
		random			= new Random();

		int[] text_speed_x		= new int[textImageArray.length];
		int[] text_position_y		= new int[textImageArray.length];
		Point[] text_pt			= new Point[textImageArray.length];
		//현재 surface의 holder를 구한다.
		SurfaceHolder surfaceHolder	= this.getHolder();
		//화면에 뿌려줄 textimage 설정
		this.setTextViewArray(new GlowingTextView[THE_NUMBER_OF_FALLING_TEXT]);/*비트맵 배열을 초기화합니다. 비트맵도 int 같은 예약어인 것 같습니다.*/
		this.setTextWidthArray(new int[THE_NUMBER_OF_FALLING_TEXT]);
		this.setTextHeightArray(new int[THE_NUMBER_OF_FALLING_TEXT]);

		//비트뱁 배열 초기화...일일히 다 초기화해줍니다.
		for(int i = 0 ; i != this.getTextViewArray().length ; i++){
			this.setTextView(i, new GlowingTextView(getContext()));
			getTextViewArray()[i].initialize(FallingText.TEXT_ARRAY[i], i);
		}

		surfaceHolder.addCallback(this);
		surfaceHolder.setFixedSize(this.getWidth(), this.getHeight());
	}
	
	private void initTextView(int index, TextView textView){
		textView.setText(FallingText.TEXT_ARRAY[index]);
		textView.setVisibility(TextView.INVISIBLE);
		
	}
	
	public void run() {
		
	}

	public void surfaceChanged(SurfaceHolder holder, int format, int width, int height) {
		
	}

	public void surfaceCreated(SurfaceHolder holder) {
		
	}

	public void surfaceDestroyed(SurfaceHolder holder) {
		
	}

}
