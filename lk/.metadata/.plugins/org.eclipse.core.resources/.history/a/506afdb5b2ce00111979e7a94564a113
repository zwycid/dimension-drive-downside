package mju.summer2012.itproject.team3.lk.sailingtext;

import mju.summer2012.itproject.team3.lk.sailingtext.R;
import mju.summer2012.itproject.team3.lk.sailingtext.mainmenu.MainMenuPage;
import mju.summer2012.itproject.team3.lk.sailingtext.ranking.RankingPage;
import mju.summer2012.itproject.team3.lk.sailingtext.ranking.RankingRelativeLayout;
import mju.summer2012.itproject.team3.lk.sailingtext.startgame.StartGamePage;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.Toast;
import android.widget.ViewFlipper;

public class LKTextViewListener implements OnClickListener {
	private MainActivity mainActivity;
	private ViewFlipper viewFlipper;

	public MainActivity getMainActivity() {		return mainActivity;	}
	public void setMainActivity(MainActivity mainActivity) {		this.mainActivity = mainActivity;	}
	public ViewFlipper getViewFlipper() {		return viewFlipper;	}
	public void setViewFlipper(ViewFlipper viewFlipper) {		this.viewFlipper = viewFlipper;	}

	private MainMenuPage mainMenuPage;
	private RankingPage rankingPage;
	private RankingRelativeLayout rankingRelativeLayout;
	private StartGamePage startGamePage;
	
	public MainMenuPage getMainMenuPage() {		return mainMenuPage;	}
	public void setMainMenuPage(MainMenuPage mainMenuPage) {		this.mainMenuPage = mainMenuPage;	}
	public RankingPage getRankingPage() {		return rankingPage;	}
	public void setRankingPage(RankingPage rankingPage) {		this.rankingPage = rankingPage;	}
	public StartGamePage getStartGamePage() {		return startGamePage;	}
	public void setStartGamePage(StartGamePage startGamePage) {		this.startGamePage = startGamePage;	}
	public RankingRelativeLayout getRankingRelativeLayout() {		return rankingRelativeLayout;	}
	public void setRankingRelativeLayout(RankingRelativeLayout rankingRelativeLayout) {		this.rankingRelativeLayout = rankingRelativeLayout;	}
	
	
	
	public void onClick(View clickedView) {
		// TODO Auto-generated method stub
		Log.i("wtf", "intextbuttonlistner - cliekedView : " + clickedView.toString() + ", viewFlipper : " + getViewFlipper());
		if(clickedView.getId() == R.id.MainmenutextViewStartgame){
			getViewFlipper().showNext();
			getStartGamePage().initStartGamePage();
		}else if(clickedView.getId() == R.id.MainmenutextViewRanking){
			//xml에 등록된 view라면 바로 그냥 shownext해도 됨.
			getViewFlipper().showNext();
			getViewFlipper().showNext();
//			getMainActivity().getRankingPage().initRankingPage();
		}else if(clickedView.getId() == R.id.MainmenutextViewOption){
			//두 번 연속으로 호출하면 그냥 맨 마지막 view가 보임.
			getViewFlipper().showNext();
			getViewFlipper().showNext();
			getViewFlipper().showNext();
		}else if(clickedView.getId() == R.id.textViewButtonSwap){
			TextView textViewSwap	= (TextView) getRankingRelativeLayout().getTextViewButtonSwap();
			Spinner spinnerRanking	= (Spinner) getRankingRelativeLayout().getSpinnerStage();
			setViewFlipper(getRankingRelativeLayout().getViewFlipperForListView());
			if(getViewFlipper().getCurrentView().getId() == R.id.listViewTotalRanking){
				spinnerRanking.setVisibility(Spinner.VISIBLE);
				textViewSwap.setText("Stage Ranking");
				getViewFlipper().showNext();
			}else if(getViewFlipper().getCurrentView().getId() == R.id.listViewStageRanking){
				spinnerRanking.setVisibility(Spinner.INVISIBLE);
				textViewSwap.setText("Total Ranking");
				getViewFlipper().showPrevious();
			}
		}else if(clickedView.getId() == R.id.textViewButtonReset){
			Toast.makeText(getMainActivity(), "RESET", Toast.LENGTH_SHORT).show();
		}else if(clickedView.getId() == R.id.StartgameTextViewNewgame){
			Toast.makeText(getMainActivity(), "New game", Toast.LENGTH_SHORT).show();
		}else if(clickedView.getId() == R.id.StartgameTextViewLoadgame){
			Toast.makeText(getMainActivity(), "Load game", Toast.LENGTH_LONG).show();
		}
	}

	public LKTextViewListener(MainActivity mainActivity){
		this.mainActivity	= mainActivity;
		
		this.setMainMenuPage(new MainMenuPage(mainActivity));
		this.setStartGamePage(new StartGamePage(mainActivity));
		this.setRankingRelativeLayout((RankingRelativeLayout) mainActivity.findViewById(R.id.RankingRelativeLayout));

		viewFlipper			= (ViewFlipper) mainActivity.findViewById(R.id.viewFlipper);
	}
}
