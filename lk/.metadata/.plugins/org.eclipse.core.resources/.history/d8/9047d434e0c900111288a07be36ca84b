package com.hanback.testdb;

import android.app.Activity;
import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.graphics.Color;
import android.os.Bundle;
import android.util.Log;
import android.view.Gravity;
import android.view.Menu;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewGroup.LayoutParams;
import android.widget.BaseAdapter;
import android.widget.GridView;
import android.widget.TextView;

public class TestDBActivity extends Activity {
	private static final String[] FROM = {"No.", "ID", "time"};
	public static final String TABLE_NAME="events";
	private static String ORDER_BY = "time"+" DESC";
	private static final int TOTAL_RANK = 2;

	private TextView idView;
	//	private RankingView rankingView;
	private TextView timeView;
	private GridView gridView;
	private TextViewAdapter textViewAdapter;

	private EventsData events;

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);

		gridView		= (GridView) this.findViewById(R.id.gridView1);
		textViewAdapter	= new TextViewAdapter(this);

		setContentView(R.layout.scoreview);

		events = new EventsData(this);

		try{
			addEvent("Hello, Android!");
			Cursor cursor = getEvents();
			showEvents(cursor);
		}finally{
			events.close();
		}
	}

	private void addEvent(String string){
		SQLiteDatabase db = events.getWritableDatabase();
		ContentValues values = new ContentValues();
		values.put(FROM[2], System.currentTimeMillis());
		values.put(FROM[1],string);
		db.insertOrThrow(TABLE_NAME, null, values);
	}

	private Cursor getEvents(){
		SQLiteDatabase db = events.getReadableDatabase();
		Cursor cursor = db.query(TABLE_NAME, null, null, null, null, null, ORDER_BY);
		startManagingCursor(cursor);
		return cursor;
	}

	private void showEvents(Cursor cursor){
    	StringBuilder builder = new StringBuilder(
    			"Saved events:\n");
    	while(cursor.moveToNext()){
    		long id=cursor.getLong(0);
    		long time = cursor.getLong(1);
    		String title = cursor.getString(2);
    		builder.append(id).append(";");
    		builder.append(time).append(";");
    		builder.append(title).append("$");
    	}
    	TextView text = (TextView) findViewById(R.id.text);
    	text.setText(builder);
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		getMenuInflater().inflate(R.menu.activity_test_db, menu);
		return true;
	}

	public class TextViewAdapter extends BaseAdapter{    	

		Context context;

		public TextViewAdapter(Context context){
			this.context	= context;
		}

		public int getCount() {
			return 0;
		}

		public Object getItem(int position) {
			return null;
		}

		public long getItemId(int position) {
			return 0;
		}

		public View getView(int position, View convertView, ViewGroup parent) {
			View view = null;
			if(convertView == null){
				view	= new View(context);
				Log.i("wtf", "convertView == null");
				view.setLayoutParams(new LayoutParams(100, 100));

			}else if(position < 3){
				view	= new TextView(context);
				((TextView)view).setGravity(Gravity.CENTER);
				((TextView)view).setText(FROM[position]);
			}else if((position >= 3) && (position < TOTAL_RANK * 3)){
				view = new TextView(context);
				((TextView)view).setGravity(Gravity.CENTER);
				if(position % 3 == 0)
					((TextView)view).setText((position/3)+1);
				else if(position % 3 == 1)
					((TextView)view).setText((position/3)+1);
				else
					((TextView)view).setText((position/3)+1);
				
				view.setBackgroundColor(0xff66ffff);
			}else{
				view = convertView;
			}
			return view;
		}
	}
}
